//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Vega.Test {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Examples {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Examples() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Vega.Test.Examples", typeof(Examples).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 900,
        ///  &quot;height&quot;: 560,
        ///  &quot;padding&quot;: {&quot;top&quot;: 25, &quot;left&quot;: 0, &quot;right&quot;: 0, &quot;bottom&quot;: 0},
        ///  &quot;autosize&quot;: &quot;none&quot;,
        ///
        ///  &quot;signals&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;scale&quot;, &quot;value&quot;: 1200,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;range&quot;, &quot;min&quot;: 500, &quot;max&quot;: 3000}
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;translateX&quot;, &quot;value&quot;: 450,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;range&quot;, &quot;min&quot;: -500, &quot;max&quot;: 1200}
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;translateY&quot;, &quot;value&quot;: 260,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;range&quot;, &quot;min&quot;: -300, &quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string airport_connections_vg {
            get {
                return ResourceManager.GetString("airport_connections_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 600,
        ///  &quot;height&quot;: 300,
        ///  &quot;autosize&quot;: &quot;fit-x&quot;,
        ///
        ///  &quot;signals&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;projection&quot;, &quot;value&quot;: &quot;naturalEarth1&quot;,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;select&quot;, &quot;options&quot;: [
        ///        &quot;azimuthalEqualArea&quot;, &quot;equalEarth&quot;, &quot;equirectangular&quot;,
        ///        &quot;naturalEarth1&quot;, &quot;mollweide&quot;, &quot;orthographic&quot;
        ///      ]}
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;scale&quot;, &quot;value&quot;: 110,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;range&quot;, &quot;min&quot;: 50, &quot;max&quot;: 400, &quot;step&quot;: 5}
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;ro [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string annual_precipitation_vg {
            get {
                return ResourceManager.GetString("annual_precipitation_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 800,
        ///  &quot;padding&quot;: 5,
        ///
        ///  &quot;config&quot;: {
        ///    &quot;title&quot;: {&quot;fontSize&quot;: 14}
        ///  },
        ///
        ///  &quot;title&quot;: {
        ///    &quot;text&quot;: &quot;Seattle Annual Temperatures&quot;,
        ///    &quot;anchor&quot;: &quot;start&quot;, &quot;offset&quot;: 4
        ///  },
        ///
        ///  &quot;signals&quot;: [
        ///    {&quot;name&quot;: &quot;rangeStep&quot;, &quot;value&quot;: 25},
        ///    {&quot;name&quot;: &quot;height&quot;, &quot;update&quot;: &quot;rangeStep * 24&quot;}
        ///  ],
        ///
        ///  &quot;data&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;temperature&quot;,
        ///      &quot;url&quot;: &quot;data/seattle-temps.csv&quot;,
        ///      &quot;format&quot;: {&quot;type&quot;: &quot;csv&quot;, &quot;parse&quot;: {&quot;temp&quot;: &quot;number&quot;, &quot;date&quot;: &quot;date [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string annual_temperature_vg {
            get {
                return ResourceManager.GetString("annual_temperature_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 770,
        ///  &quot;padding&quot;: 5,
        ///
        ///  &quot;data&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;edges&quot;,
        ///      &quot;url&quot;: &quot;data/miserables.json&quot;,
        ///      &quot;format&quot;: {&quot;type&quot;: &quot;json&quot;, &quot;property&quot;: &quot;links&quot;}
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;sourceDegree&quot;,
        ///      &quot;source&quot;: &quot;edges&quot;,
        ///      &quot;transform&quot;: [
        ///        {&quot;type&quot;: &quot;aggregate&quot;, &quot;groupby&quot;: [&quot;source&quot;]}
        ///      ]
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;targetDegree&quot;,
        ///      &quot;source&quot;: &quot;edges&quot;,
        ///      &quot;transform&quot;: [
        ///        {&quot;type&quot;: &quot;aggregate&quot;, &quot;groupby&quot;: [&quot;targ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string arc_diagram_vg {
            get {
                return ResourceManager.GetString("arc_diagram_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 500,
        ///  &quot;height&quot;: 200,
        ///  &quot;padding&quot;: 5,
        ///
        ///  &quot;signals&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;interpolate&quot;,
        ///      &quot;value&quot;: &quot;monotone&quot;,
        ///      &quot;bind&quot;: {
        ///        &quot;input&quot;: &quot;select&quot;,
        ///        &quot;options&quot;: [
        ///          &quot;basis&quot;,
        ///          &quot;cardinal&quot;,
        ///          &quot;catmull-rom&quot;,
        ///          &quot;linear&quot;,
        ///          &quot;monotone&quot;,
        ///          &quot;natural&quot;,
        ///          &quot;step&quot;,
        ///          &quot;step-after&quot;,
        ///          &quot;step-before&quot;
        ///        ]
        ///      }
        ///    }
        ///  ],
        ///
        ///  &quot;data&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;ta [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string area_chart_vg {
            get {
                return ResourceManager.GetString("area_chart_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 400,
        ///  &quot;height&quot;: 200,
        ///  &quot;padding&quot;: 5,
        ///
        ///  &quot;data&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;table&quot;,
        ///      &quot;values&quot;: [
        ///        {&quot;category&quot;: &quot;A&quot;, &quot;amount&quot;: 28},
        ///        {&quot;category&quot;: &quot;B&quot;, &quot;amount&quot;: 55},
        ///        {&quot;category&quot;: &quot;C&quot;, &quot;amount&quot;: 43},
        ///        {&quot;category&quot;: &quot;D&quot;, &quot;amount&quot;: 91},
        ///        {&quot;category&quot;: &quot;E&quot;, &quot;amount&quot;: 81},
        ///        {&quot;category&quot;: &quot;F&quot;, &quot;amount&quot;: 53},
        ///        {&quot;category&quot;: &quot;G&quot;, &quot;amount&quot;: 19},
        ///        {&quot;category&quot;: &quot;H&quot;, &quot;amount&quot;: 87}
        ///      ]
        ///    }
        ///  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string bar_chart_vg {
            get {
                return ResourceManager.GetString("bar_chart_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 200,
        ///  &quot;padding&quot;: 5,
        ///
        ///  &quot;signals&quot;: [
        ///    {&quot;name&quot;: &quot;offset&quot;, &quot;value&quot;: 15},
        ///    {&quot;name&quot;: &quot;cellHeight&quot;, &quot;value&quot;: 100},
        ///    {&quot;name&quot;: &quot;height&quot;, &quot;update&quot;: &quot;6 * (offset + cellHeight)&quot;}
        ///  ],
        ///
        ///  &quot;data&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;barley&quot;,
        ///      &quot;url&quot;: &quot;data/barley.json&quot;
        ///    }
        ///  ],
        ///
        ///  &quot;scales&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;gscale&quot;,
        ///      &quot;type&quot;: &quot;band&quot;,
        ///      &quot;range&quot;: [0, {&quot;signal&quot;: &quot;height&quot;}],
        ///      &quot;round&quot;: true,
        ///      &quot;domain&quot;: {
        ///        &quot;data&quot;: &quot;barley [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string barley_trellis_plot_vg {
            get {
                return ResourceManager.GetString("barley_trellis_plot_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 800,
        ///  &quot;height&quot;: 100,
        ///  &quot;padding&quot;: {&quot;left&quot;: 5, &quot;right&quot;: 5, &quot;top&quot;: 0, &quot;bottom&quot;: 20},
        ///  &quot;autosize&quot;: &quot;none&quot;,
        ///
        ///  &quot;signals&quot;: [
        ///    { &quot;name&quot;: &quot;cx&quot;, &quot;update&quot;: &quot;width / 2&quot; },
        ///    { &quot;name&quot;: &quot;cy&quot;, &quot;update&quot;: &quot;height / 2&quot; },
        ///    { &quot;name&quot;: &quot;radius&quot;, &quot;value&quot;: 8, &quot;bind&quot;: {&quot;input&quot;: &quot;range&quot;, &quot;min&quot;: 2, &quot;max&quot;: 15, &quot;step&quot;: 1} },
        ///    { &quot;name&quot;: &quot;collide&quot;, &quot;value&quot;: 1, &quot;bind&quot;: {&quot;input&quot;: &quot;range&quot;, &quot;min&quot;: 1, &quot;max&quot;: 10, &quot;step&quot;: 1} },
        ///    { &quot;name&quot;: &quot;gravityX&quot;, &quot;val [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string beeswarm_plot_vg {
            get {
                return ResourceManager.GetString("beeswarm_plot_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 200,
        ///  &quot;height&quot;: 200,
        ///  &quot;padding&quot;: 5,
        ///  &quot;autosize&quot;: &quot;pad&quot;,
        ///
        ///  &quot;data&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;source&quot;,
        ///      &quot;url&quot;: &quot;data/cars.json&quot;,
        ///      &quot;transform&quot;: [
        ///        {
        ///          &quot;type&quot;: &quot;filter&quot;,
        ///          &quot;expr&quot;: &quot;datum[&apos;Horsepower&apos;] != null &amp;&amp; datum[&apos;Miles_per_Gallon&apos;] != null &amp;&amp; datum[&apos;Acceleration&apos;] != null&quot;
        ///        }
        ///      ]
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;summary&quot;,
        ///      &quot;source&quot;: &quot;source&quot;,
        ///      &quot;transform&quot;: [
        ///        {
        ///          &quot;type&quot;: [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string binned_scatter_plot_vg {
            get {
                return ResourceManager.GetString("binned_scatter_plot_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 500,
        ///  &quot;padding&quot;: 5,
        ///
        ///  &quot;config&quot;: {
        ///    &quot;axisBand&quot;: {
        ///      &quot;bandPosition&quot;: 1,
        ///      &quot;tickExtra&quot;: true,
        ///      &quot;tickOffset&quot;: 0
        ///    }
        ///  },
        ///
        ///  &quot;signals&quot;: [
        ///    { &quot;name&quot;: &quot;fields&quot;,
        ///      &quot;value&quot;: [&quot;petalWidth&quot;, &quot;petalLength&quot;, &quot;sepalWidth&quot;, &quot;sepalLength&quot;] },
        ///    { &quot;name&quot;: &quot;plotWidth&quot;, &quot;value&quot;: 60 },
        ///    { &quot;name&quot;: &quot;height&quot;, &quot;update&quot;: &quot;(plotWidth + 10) * length(fields)&quot;}
        ///  ],
        ///
        ///  &quot;data&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;iris&quot;,
        ///      &quot;url&quot;: &quot;data/iris.jso [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string box_plot_vg {
            get {
                return ResourceManager.GetString("box_plot_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;padding&quot;: 10,
        ///  &quot;config&quot;: {
        ///    &quot;axis&quot;: {
        ///      &quot;tickColor&quot;: &quot;#ccc&quot;
        ///    }
        ///  },
        ///
        ///  &quot;signals&quot;: [
        ///    { &quot;name&quot;: &quot;chartSize&quot;, &quot;value&quot;: 120 },
        ///    { &quot;name&quot;: &quot;chartPad&quot;, &quot;value&quot;: 15 },
        ///    { &quot;name&quot;: &quot;chartStep&quot;, &quot;update&quot;: &quot;chartSize + chartPad&quot; },
        ///    { &quot;name&quot;: &quot;width&quot;, &quot;update&quot;: &quot;chartStep * 4&quot; },
        ///    { &quot;name&quot;: &quot;height&quot;, &quot;update&quot;: &quot;chartStep * 4&quot; },
        ///    {
        ///      &quot;name&quot;: &quot;cell&quot;, &quot;value&quot;: null,
        ///      &quot;on&quot;: [
        ///        {
        ///          &quot;events&quot;: &quot;@cell:mousedo [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string brushing_scatter_plots_vg {
            get {
                return ResourceManager.GetString("brushing_scatter_plots_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 700,
        ///  &quot;height&quot;: 400,
        ///  &quot;padding&quot;: 5,
        ///  &quot;background&quot;: &quot;#edf1f7&quot;,
        ///
        ///  &quot;config&quot;: {
        ///    &quot;axisBand&quot;: {
        ///      &quot;bandPosition&quot;: 0,
        ///      &quot;labelPadding&quot;: 5,
        ///      &quot;tickExtra&quot;: false
        ///    }
        ///  },
        ///
        ///  &quot;signals&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;dragging&quot;,
        ///      &quot;value&quot;: false,
        ///      &quot;on&quot;: [
        ///        {&quot;events&quot;: &quot;@handle:mousedown&quot;, &quot;update&quot;: &quot;true&quot;},
        ///        {&quot;events&quot;: &quot;window:mouseup&quot;, &quot;update&quot;: &quot;false&quot;}
        ///      ]
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;handleYear&quot;,
        ///      &quot;v [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string budget_forecasts_vg {
            get {
                return ResourceManager.GetString("budget_forecasts_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 600,
        ///  &quot;height&quot;: 600,
        ///  &quot;padding&quot;: 5,
        ///  &quot;autosize&quot;: &quot;none&quot;,
        ///
        ///  &quot;data&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;tree&quot;,
        ///      &quot;url&quot;: &quot;data/flare.json&quot;,
        ///      &quot;transform&quot;: [
        ///        {
        ///          &quot;type&quot;: &quot;stratify&quot;,
        ///          &quot;key&quot;: &quot;id&quot;,
        ///          &quot;parentKey&quot;: &quot;parent&quot;
        ///        },
        ///        {
        ///          &quot;type&quot;: &quot;pack&quot;,
        ///          &quot;field&quot;: &quot;size&quot;,
        ///          &quot;sort&quot;: {&quot;field&quot;: &quot;value&quot;},
        ///          &quot;size&quot;: [{&quot;signal&quot;: &quot;width&quot;}, {&quot;signal&quot;: &quot;height&quot;}]
        ///        }
        ///      ] [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string circle_packing_vg {
            get {
                return ResourceManager.GetString("circle_packing_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 400,
        ///  &quot;height&quot;: 400,
        ///  &quot;signals&quot;: [
        ///    {&quot;name&quot;: &quot;centerX&quot;, &quot;init&quot;: &quot;width/2&quot;},
        ///    {&quot;name&quot;: &quot;centerY&quot;, &quot;init&quot;: &quot;height/2&quot;},
        ///    {&quot;name&quot;: &quot;radiusRef&quot;, &quot;init&quot;: &quot;min(width,height)*0.8&quot;},
        ///    {&quot;name&quot;: &quot;sizeFactor&quot;, &quot;init&quot;: &quot;radiusRef/400&quot;},
        ///    {&quot;name&quot;: &quot;outerRadius&quot;, &quot;init&quot;: &quot;radiusRef/2&quot;},
        ///    {&quot;name&quot;: &quot;innerRadius&quot;, &quot;init&quot;: &quot;radiusRef/2 - (10 * sizeFactor)&quot;},
        ///    {
        ///      &quot;name&quot;: &quot;currentDate&quot;,
        ///      &quot;init&quot;: &quot;now()&quot;,
        ///      &quot;on&quot;: [{&quot;even [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string clock_vg {
            get {
                return ResourceManager.GetString("clock_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 800,
        ///  &quot;height&quot;: 500,
        ///  &quot;padding&quot;: 5,
        ///
        ///  &quot;config&quot;: {
        ///    &quot;axis&quot;: {
        ///      &quot;domain&quot;: false,
        ///      &quot;labelFontSize&quot;: 12,
        ///      &quot;labelFontWeight&quot;: &quot;bold&quot;,
        ///      &quot;tickSize&quot;: 0
        ///    }
        ///  },
        ///
        ///  &quot;data&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;drive&quot;,
        ///      &quot;url&quot;: &quot;data/driving.json&quot;
        ///    }
        ///  ],
        ///
        ///  &quot;scales&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;x&quot;,
        ///      &quot;type&quot;: &quot;linear&quot;,
        ///      &quot;domain&quot;: {&quot;data&quot;: &quot;drive&quot;, &quot;field&quot;: &quot;miles&quot;},
        ///      &quot;range&quot;: &quot;width&quot;,
        ///      &quot;nice&quot;: true,
        ///      &quot;zero&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string connected_scatter_plot_vg {
            get {
                return ResourceManager.GetString("connected_scatter_plot_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 500,
        ///  &quot;height&quot;: 400,
        ///  &quot;padding&quot;: 5,
        ///  &quot;autosize&quot;: &quot;pad&quot;,
        ///
        ///  &quot;signals&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;bandwidth&quot;, &quot;value&quot;: -1,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;range&quot;, &quot;min&quot;: -1, &quot;max&quot;: 100, &quot;step&quot;: 1}
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;resolve&quot;, &quot;value&quot;: &quot;shared&quot;,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;select&quot;, &quot;options&quot;: [&quot;independent&quot;, &quot;shared&quot;]}
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;counts&quot;, &quot;value&quot;: true,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;checkbox&quot;}
        ///    }
        ///  ],
        ///
        ///  &quot;data&quot;: [
        ///    {
        ///      [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string contour_plot_vg {
            get {
                return ResourceManager.GetString("contour_plot_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 960,
        ///  &quot;height&quot;: 500,
        ///  &quot;autosize&quot;: &quot;none&quot;,
        ///
        ///  &quot;data&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;unemp&quot;,
        ///      &quot;url&quot;: &quot;data/unemployment.tsv&quot;,
        ///      &quot;format&quot;: {&quot;type&quot;: &quot;tsv&quot;, &quot;parse&quot;: &quot;auto&quot;}
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;counties&quot;,
        ///      &quot;url&quot;: &quot;data/us-10m.json&quot;,
        ///      &quot;format&quot;: {&quot;type&quot;: &quot;topojson&quot;, &quot;feature&quot;: &quot;counties&quot;},
        ///      &quot;transform&quot;: [
        ///        { &quot;type&quot;: &quot;lookup&quot;, &quot;from&quot;: &quot;unemp&quot;, &quot;key&quot;: &quot;id&quot;, &quot;fields&quot;: [&quot;id&quot;], &quot;values&quot;: [&quot;rate&quot;] },
        ///        { &quot;type [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string county_unemployment_vg {
            get {
                return ResourceManager.GetString("county_unemployment_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 500,
        ///  &quot;padding&quot;: 5,
        ///
        ///  &quot;signals&quot;: [
        ///    { &quot;name&quot;: &quot;chartHeight&quot;, &quot;value&quot;: 100 },
        ///    { &quot;name&quot;: &quot;chartPadding&quot;, &quot;value&quot;: 50 },
        ///    { &quot;name&quot;: &quot;height&quot;, &quot;update&quot;: &quot;(chartHeight + chartPadding) * 3&quot; },
        ///    { &quot;name&quot;: &quot;delayExtent&quot;, &quot;value&quot;: [-60, 180] },
        ///    { &quot;name&quot;: &quot;timeExtent&quot;, &quot;value&quot;: [0, 24] },
        ///    { &quot;name&quot;: &quot;distExtent&quot;, &quot;value&quot;: [0, 2400] },
        ///    { &quot;name&quot;: &quot;delayStep&quot;, &quot;value&quot;: 10,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;range&quot;, &quot;min&quot;: 2, &quot;max&quot;: 2 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string crossfilter_flights_vg {
            get {
                return ResourceManager.GetString("crossfilter_flights_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 250,
        ///  &quot;height&quot;: 250,
        ///  &quot;padding&quot;: 5,
        ///  &quot;autosize&quot;: &quot;pad&quot;,
        ///
        ///  &quot;signals&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;fieldX&quot;, &quot;value&quot;: &quot;Acceleration&quot;,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;select&quot;, &quot;options&quot;: [&quot;Acceleration&quot;, &quot;Displacement&quot;, &quot;Horsepower&quot;]}
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;bandwidthX&quot;, &quot;value&quot;: -1,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;range&quot;, &quot;min&quot;: -1, &quot;max&quot;: 100, &quot;step&quot;: 1}
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;bandwidthY&quot;, &quot;value&quot;: -1,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;range&quot;, &quot;min&quot;: -1 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string density_heatmaps_vg {
            get {
                return ResourceManager.GetString("density_heatmaps_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 900,
        ///  &quot;height&quot;: 500,
        ///  &quot;autosize&quot;: &quot;none&quot;,
        ///
        ///  &quot;signals&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;baseProjection&quot;,
        ///      &quot;value&quot;: &quot;azimuthalEqualArea&quot;,
        ///      &quot;bind&quot;: {
        ///        &quot;input&quot;: &quot;select&quot;,
        ///        &quot;options&quot;: [
        ///          &quot;albers&quot;,
        ///          &quot;albersUsa&quot;,
        ///          &quot;azimuthalEqualArea&quot;,
        ///          &quot;azimuthalEquidistant&quot;,
        ///          &quot;conicConformal&quot;,
        ///          &quot;conicEqualArea&quot;,
        ///          &quot;conicEquidistant&quot;,
        ///          &quot;equalEarth&quot;,
        ///          &quot;equirectang [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string distortion_comparison_vg {
            get {
                return ResourceManager.GetString("distortion_comparison_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 200,
        ///  &quot;height&quot;: 200,
        ///  &quot;autosize&quot;: &quot;none&quot;,
        ///
        ///  &quot;signals&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;startAngle&quot;, &quot;value&quot;: 0,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;range&quot;, &quot;min&quot;: 0, &quot;max&quot;: 6.29, &quot;step&quot;: 0.01}
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;endAngle&quot;, &quot;value&quot;: 6.29,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;range&quot;, &quot;min&quot;: 0, &quot;max&quot;: 6.29, &quot;step&quot;: 0.01}
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;padAngle&quot;, &quot;value&quot;: 0,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;range&quot;, &quot;min&quot;: 0, &quot;max&quot;: 0.1}
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;innerR [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string donut_chart_vg {
            get {
                return ResourceManager.GetString("donut_chart_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 900,
        ///  &quot;height&quot;: 520,
        ///  &quot;autosize&quot;: &quot;none&quot;,
        ///
        ///  &quot;config&quot;: {
        ///    &quot;legend&quot;: {
        ///      &quot;gradientDirection&quot;: &quot;horizontal&quot;,
        ///      &quot;gradientLength&quot;: 120,
        ///      &quot;gradientThickness&quot;: 10
        ///    }
        ///  },
        ///
        ///  &quot;data&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;states&quot;,
        ///      &quot;url&quot;: &quot;data/us-10m.json&quot;,
        ///      &quot;format&quot;: {&quot;type&quot;: &quot;topojson&quot;, &quot;feature&quot;: &quot;states&quot;}
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;obesity&quot;,
        ///      &quot;url&quot;: &quot;data/obesity.json&quot;,
        ///      &quot;transform&quot;: [
        ///        {
        ///          &quot;type&quot;: [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string dorling_cartogram_vg {
            get {
                return ResourceManager.GetString("dorling_cartogram_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 300,
        ///  &quot;padding&quot;: 5,
        ///
        ///  &quot;signals&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;step&quot;, &quot;value&quot;: 0.65,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;range&quot;, &quot;min&quot;: 0.1, &quot;max&quot;: 2, &quot;step&quot;: 0.01}
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;offset&quot;, &quot;value&quot;: &quot;zero&quot;,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;radio&quot;, &quot;options&quot;: [&quot;zero&quot;, &quot;center&quot;]}
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;smooth&quot;, &quot;value&quot;: true,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;checkbox&quot;}
        ///    },
        ///    {&quot;name&quot;: &quot;size&quot;, &quot;update&quot;: &quot;scale(&apos;x&apos;, step) - scale(&apos;x&apos;, 0)&quot;},
        ///    {&quot;name [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string dot_plot_vg {
            get {
                return ResourceManager.GetString("dot_plot_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;padding&quot;: 10,
        ///  &quot;width&quot;: 450,
        ///  &quot;height&quot;: 450,
        ///  &quot;autosize&quot;: &quot;none&quot;,
        ///
        ///  &quot;signals&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;quakeSize&quot;, &quot;value&quot;: 6,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;range&quot;, &quot;min&quot;: 0, &quot;max&quot;: 12}
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;rotate0&quot;, &quot;value&quot;: 90,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;range&quot;, &quot;min&quot;: -180, &quot;max&quot;: 180}
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;rotate1&quot;, &quot;value&quot;: -5,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;range&quot;, &quot;min&quot;: -180, &quot;max&quot;: 180}
        ///    }
        ///  ],
        ///
        ///  &quot;data&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;s [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string earthquakes_vg {
            get {
                return ResourceManager.GetString("earthquakes_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;padding&quot;: 5,
        ///  &quot;width&quot;: 720,
        ///  &quot;height&quot;: 720,
        ///  &quot;autosize&quot;: &quot;none&quot;,
        ///
        ///  &quot;signals&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;tension&quot;, &quot;value&quot;: 0.85,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;range&quot;, &quot;min&quot;: 0, &quot;max&quot;: 1, &quot;step&quot;: 0.01}
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;radius&quot;, &quot;value&quot;: 280,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;range&quot;, &quot;min&quot;: 20, &quot;max&quot;: 400}
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;extent&quot;, &quot;value&quot;: 360,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;range&quot;, &quot;min&quot;: 0, &quot;max&quot;: 360, &quot;step&quot;: 1}
        ///    },
        ///    {
        ///      &quot;name&quot;:  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string edge_bundling_vg {
            get {
                return ResourceManager.GetString("edge_bundling_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 500,
        ///  &quot;height&quot;: 160,
        ///  &quot;padding&quot;: 5,
        ///
        ///  &quot;config&quot;: {
        ///    &quot;axisBand&quot;: {
        ///      &quot;bandPosition&quot;: 1,
        ///      &quot;tickExtra&quot;: true,
        ///      &quot;tickOffset&quot;: 0
        ///    }
        ///  },
        ///
        ///  &quot;signals&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;errorMeasure&quot;, &quot;value&quot;: &quot;95% Confidence Interval&quot;,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;select&quot;, &quot;options&quot;: [
        ///        &quot;95% Confidence Interval&quot;,
        ///        &quot;Standard Error&quot;,
        ///        &quot;Standard Deviation&quot;,
        ///        &quot;Interquartile Range&quot;
        ///      ]}
        ///    },
        ///    {
        ///      &quot;n [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string error_bars_vg {
            get {
                return ResourceManager.GetString("error_bars_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 500,
        ///  &quot;height&quot;: 250,
        ///  &quot;padding&quot;: 5,
        ///  &quot;config&quot;: {
        ///    &quot;title&quot;: {
        ///      &quot;fontSize&quot;: 16
        ///    }
        ///  },
        ///
        ///  &quot;title&quot;: {
        ///    &quot;text&quot;: {&quot;signal&quot;: &quot;&apos;Population of Falkensee from &apos; + years[0] + &apos; to &apos; + years[1]&quot;}
        ///  },
        ///
        ///  &quot;data&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;table&quot;,
        ///      &quot;values&quot;: [
        ///        {&quot;year&quot;: 1875, &quot;population&quot;: 1309},
        ///        {&quot;year&quot;: 1890, &quot;population&quot;: 1558},
        ///        {&quot;year&quot;: 1910, &quot;population&quot;: 4512},
        ///        {&quot;year&quot;: 1925, &quot;population&quot;: 8180 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string falkensee_population_vg {
            get {
                return ResourceManager.GetString("falkensee_population_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 700,
        ///  &quot;height&quot;: 500,
        ///  &quot;padding&quot;: 0,
        ///  &quot;autosize&quot;: &quot;none&quot;,
        ///
        ///  &quot;signals&quot;: [
        ///    { &quot;name&quot;: &quot;cx&quot;, &quot;update&quot;: &quot;width / 2&quot; },
        ///    { &quot;name&quot;: &quot;cy&quot;, &quot;update&quot;: &quot;height / 2&quot; },
        ///    { &quot;name&quot;: &quot;nodeRadius&quot;, &quot;value&quot;: 8,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;range&quot;, &quot;min&quot;: 1, &quot;max&quot;: 50, &quot;step&quot;: 1} },
        ///    { &quot;name&quot;: &quot;nodeCharge&quot;, &quot;value&quot;: -30,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;range&quot;, &quot;min&quot;:-100, &quot;max&quot;: 10, &quot;step&quot;: 1} },
        ///    { &quot;name&quot;: &quot;linkDistance&quot;, &quot;value&quot;: 30,
        ///      &quot;bin [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string force_directed_layout_vg {
            get {
                return ResourceManager.GetString("force_directed_layout_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 800,
        ///  &quot;height&quot;: 600,
        ///  &quot;padding&quot;: 5,
        ///
        ///  &quot;data&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;gapminder&quot;,
        ///      &quot;url&quot;: &quot;data/gapminder.json&quot;
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;clusters&quot;,
        ///      &quot;values&quot;: [
        ///        {&quot;id&quot;: 0, &quot;name&quot;: &quot;South Asia&quot;},
        ///        {&quot;id&quot;: 1, &quot;name&quot;: &quot;Europe &amp; Central Asia&quot;},
        ///        {&quot;id&quot;: 2, &quot;name&quot;: &quot;Sub-Saharan Africa&quot;},
        ///        {&quot;id&quot;: 3, &quot;name&quot;: &quot;America&quot;},
        ///        {&quot;id&quot;: 4, &quot;name&quot;: &quot;East Asia &amp; Pacific&quot;},
        ///        {&quot;id&quot;: 5, &quot;name&quot;: &quot;Middle  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string global_development_vg {
            get {
                return ResourceManager.GetString("global_development_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 300,
        ///  &quot;height&quot;: 240,
        ///  &quot;padding&quot;: 5,
        ///
        ///  &quot;data&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;table&quot;,
        ///      &quot;values&quot;: [
        ///        {&quot;category&quot;:&quot;A&quot;, &quot;position&quot;:0, &quot;value&quot;:0.1},
        ///        {&quot;category&quot;:&quot;A&quot;, &quot;position&quot;:1, &quot;value&quot;:0.6},
        ///        {&quot;category&quot;:&quot;A&quot;, &quot;position&quot;:2, &quot;value&quot;:0.9},
        ///        {&quot;category&quot;:&quot;A&quot;, &quot;position&quot;:3, &quot;value&quot;:0.4},
        ///        {&quot;category&quot;:&quot;B&quot;, &quot;position&quot;:0, &quot;value&quot;:0.7},
        ///        {&quot;category&quot;:&quot;B&quot;, &quot;position&quot;:1, &quot;value&quot;:0.2},
        ///        {&quot;category&quot;:&quot;B&quot;, [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string grouped_bar_chart_vg {
            get {
                return ResourceManager.GetString("grouped_bar_chart_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 800,
        ///  &quot;height&quot;: 500,
        ///  &quot;padding&quot;: 5,
        ///
        ///  &quot;title&quot;: {
        ///    &quot;text&quot;: &quot;Seattle Annual Temperatures&quot;,
        ///    &quot;anchor&quot;: &quot;middle&quot;,
        ///    &quot;fontSize&quot;: 16,
        ///    &quot;frame&quot;: &quot;group&quot;,
        ///    &quot;offset&quot;: 4
        ///  },
        ///
        ///  &quot;signals&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;palette&quot;, &quot;value&quot;: &quot;Viridis&quot;,
        ///      &quot;bind&quot;: {
        ///        &quot;input&quot;: &quot;select&quot;,
        ///        &quot;options&quot;: [
        ///          &quot;Viridis&quot;,
        ///          &quot;Magma&quot;,
        ///          &quot;Inferno&quot;,
        ///          &quot;Plasma&quot;,
        ///          &quot;DarkBlue&quot;,
        ///          &quot;DarkGold&quot;,
        ///   [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string heatmap_vg {
            get {
                return ResourceManager.GetString("heatmap_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 400,
        ///  &quot;height&quot;: 200,
        ///  &quot;padding&quot;: 5,
        ///  &quot;autosize&quot;: {&quot;type&quot;: &quot;fit&quot;, &quot;resize&quot;: true},
        ///
        ///  &quot;signals&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;maxbins&quot;, &quot;value&quot;: 10,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;select&quot;, &quot;options&quot;: [5, 10, 20]}
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;binCount&quot;,
        ///      &quot;update&quot;: &quot;(bins.stop - bins.start) / bins.step&quot;
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;nullGap&quot;, &quot;value&quot;: 10
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;barStep&quot;,
        ///      &quot;update&quot;: &quot;(width - nullGap) / (1 + binCount)&quot;
        ///   [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string histogram_null_values_vg {
            get {
                return ResourceManager.GetString("histogram_null_values_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 500,
        ///  &quot;height&quot;: 100,
        ///  &quot;padding&quot;: 5,
        ///
        ///  &quot;signals&quot;: [
        ///    { &quot;name&quot;: &quot;binOffset&quot;, &quot;value&quot;: 0,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;range&quot;, &quot;min&quot;: -0.1, &quot;max&quot;: 0.1} },
        ///    { &quot;name&quot;: &quot;binStep&quot;, &quot;value&quot;: 0.1,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;range&quot;, &quot;min&quot;: 0.001, &quot;max&quot;: 0.4, &quot;step&quot;: 0.001} }
        ///  ],
        ///
        ///  &quot;data&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;points&quot;,
        ///      &quot;url&quot;: &quot;data/normal-2d.json&quot;
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;binned&quot;,
        ///      &quot;source&quot;: &quot;points&quot;,
        ///      &quot;transform&quot;: [
        ///     [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string histogram_vg {
            get {
                return ResourceManager.GetString("histogram_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 500,
        ///  &quot;height&quot;: 100,
        ///
        ///  &quot;signals&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;layers&quot;,
        ///      &quot;value&quot;: 2,
        ///      &quot;on&quot;: [{&quot;events&quot;: &quot;mousedown!&quot;, &quot;update&quot;: &quot;1 + (layers % 4)&quot;}],
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;select&quot;, &quot;options&quot;: [1, 2, 3, 4]}
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;height&quot;,
        ///      &quot;update&quot;: &quot;floor(200 / layers)&quot;
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;vheight&quot;,
        ///      &quot;update&quot;: &quot;height * layers&quot;
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;opacity&quot;,
        ///      &quot;update&quot;: &quot;pow(layers, -2/3)&quot;
        ///     [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string horizon_graph_vg {
            get {
                return ResourceManager.GetString("horizon_graph_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 300,
        ///  &quot;height&quot;: 200,
        ///
        ///  &quot;signals&quot;: [
        ///    { &quot;name&quot;: &quot;baseline&quot;, &quot;value&quot;: 5 },
        ///    {
        ///      &quot;name&quot;: &quot;noise&quot;, &quot;value&quot;: 2,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;range&quot;, &quot;min&quot;: 0, &quot;max&quot;: 4, &quot;step&quot;: 0.1}
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;trend&quot;, &quot;value&quot;: 0,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;range&quot;, &quot;min&quot;: -1, &quot;max&quot;: 1, &quot;step&quot;: 0.1}
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;sample&quot;, &quot;value&quot;: 1,
        ///      &quot;on&quot;: [
        ///        {
        ///          &quot;events&quot;: &quot;timer{1000}&quot;,
        ///          &quot;update&quot;: &quot;1 + ((sampl [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string hypothetical_outcome_plots_vg {
            get {
                return ResourceManager.GetString("hypothetical_outcome_plots_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;description&quot;: &quot;Scatter plot with interactive legend and x-axis.&quot;,
        ///  &quot;width&quot;: 200,
        ///  &quot;height&quot;: 200,
        ///  &quot;padding&quot;: 5,
        ///  &quot;autosize&quot;: &quot;pad&quot;,
        ///
        ///  &quot;signals&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;clear&quot;, &quot;value&quot;: true,
        ///      &quot;on&quot;: [
        ///        {
        ///          &quot;events&quot;: &quot;mouseup[!event.item]&quot;,
        ///          &quot;update&quot;: &quot;true&quot;,
        ///          &quot;force&quot;: true
        ///        }
        ///      ]
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;shift&quot;, &quot;value&quot;: false,
        ///      &quot;on&quot;: [
        ///        {
        ///          &quot;events&quot;: &quot;@legendSymbol:cli [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string interactive_legend_vg {
            get {
                return ResourceManager.GetString("interactive_legend_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 800,
        ///  &quot;height&quot;: 500,
        ///  &quot;padding&quot;: 5,
        ///
        ///  &quot;signals&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;sex&quot;, &quot;value&quot;: &quot;all&quot;,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;radio&quot;, &quot;options&quot;: [&quot;men&quot;, &quot;women&quot;, &quot;all&quot;]}
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;query&quot;, &quot;value&quot;: &quot;&quot;,
        ///      &quot;on&quot;: [
        ///        {&quot;events&quot;: &quot;area:click!&quot;, &quot;update&quot;: &quot;datum.job&quot;},
        ///        {&quot;events&quot;: &quot;dblclick!&quot;, &quot;update&quot;: &quot;&apos;&apos;&quot;}
        ///      ],
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;text&quot;, &quot;placeholder&quot;: &quot;search&quot;, &quot;autocomplete&quot;: &quot;off&quot;}
        ///    }
        ///  ],
        ///
        ///  &quot;d [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string job_voyager_vg {
            get {
                return ResourceManager.GetString("job_voyager_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 500,
        ///  &quot;height&quot;: 200,
        ///  &quot;padding&quot;: 5,
        ///
        ///  &quot;signals&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;interpolate&quot;,
        ///      &quot;value&quot;: &quot;linear&quot;,
        ///      &quot;bind&quot;: {
        ///        &quot;input&quot;: &quot;select&quot;,
        ///        &quot;options&quot;: [
        ///          &quot;basis&quot;,
        ///          &quot;cardinal&quot;,
        ///          &quot;catmull-rom&quot;,
        ///          &quot;linear&quot;,
        ///          &quot;monotone&quot;,
        ///          &quot;natural&quot;,
        ///          &quot;step&quot;,
        ///          &quot;step-after&quot;,
        ///          &quot;step-before&quot;
        ///        ]
        ///      }
        ///    }
        ///  ],
        ///
        ///  &quot;data&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;tabl [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string line_chart_vg {
            get {
                return ResourceManager.GetString("line_chart_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;padding&quot;: 5,
        ///  &quot;width&quot;: 500,
        ///  &quot;height&quot;: 500,
        ///  &quot;autosize&quot;: &quot;pad&quot;,
        ///
        ///  &quot;signals&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;loessBandwidth&quot;, &quot;value&quot;: 0.3,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;range&quot;, &quot;min&quot;: 0.05, &quot;max&quot;: 1}
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;groupby&quot;, &quot;value&quot;: &quot;none&quot;,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;select&quot;, &quot;options&quot;: [&quot;none&quot;, &quot;genre&quot;]}
        ///    }
        ///  ],
        ///
        ///  &quot;data&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;movies&quot;,
        ///      &quot;url&quot;: &quot;data/movies.json&quot;,
        ///      &quot;transform&quot;: [
        ///        {
        ///          &quot;type&quot;: &quot;f [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string loess_regression_vg {
            get {
                return ResourceManager.GetString("loess_regression_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 300,
        ///  &quot;padding&quot;: 5,
        ///  &quot;autosize&quot;: &quot;pad&quot;,
        ///
        ///  &quot;signals&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;rangeStep&quot;, &quot;value&quot;: 20,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;range&quot;, &quot;min&quot;: 5, &quot;max&quot;: 50, &quot;step&quot;: 1}
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;innerPadding&quot;, &quot;value&quot;: 0.1,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;range&quot;, &quot;min&quot;: 0, &quot;max&quot;: 0.7, &quot;step&quot;: 0.01}
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;outerPadding&quot;, &quot;value&quot;: 0.2,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;range&quot;, &quot;min&quot;: 0, &quot;max&quot;: 0.4, &quot;step&quot;: 0.01}
        ///    },
        ///    {
        ///       [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string nested_bar_chart_vg {
            get {
                return ResourceManager.GetString("nested_bar_chart_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 720,
        ///  &quot;height&quot;: 480,
        ///  &quot;padding&quot;: 5,
        ///
        ///  &quot;data&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;sp500&quot;,
        ///      &quot;url&quot;: &quot;data/sp500.csv&quot;,
        ///      &quot;format&quot;: {&quot;type&quot;: &quot;csv&quot;, &quot;parse&quot;: {&quot;price&quot;: &quot;number&quot;, &quot;date&quot;: &quot;date&quot;}}
        ///    }
        ///  ],
        ///
        ///  &quot;signals&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;detailDomain&quot;
        ///    }
        ///  ],
        ///
        ///  &quot;marks&quot;: [
        ///    {
        ///      &quot;type&quot;: &quot;group&quot;,
        ///      &quot;name&quot;: &quot;detail&quot;,
        ///      &quot;encode&quot;: {
        ///        &quot;enter&quot;: {
        ///          &quot;height&quot;: {&quot;value&quot;: 390},
        ///          &quot;width&quot;: {&quot;value&quot;: 720}
        ///     [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string overview_plus_detail_vg {
            get {
                return ResourceManager.GetString("overview_plus_detail_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;:600,
        ///  &quot;height&quot;:600,
        ///  &quot;signals&quot;:[
        ///    {
        ///      &quot;name&quot;: &quot;grid&quot;,
        ///      &quot;value&quot;: {&quot;width&quot;:15, &quot;height&quot;:15}
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;rangeWidthDelta&quot;,
        ///      &quot;update&quot;: &quot;(width - blockSize*grid.width)/2&quot;
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;rangeHeightDelta&quot;,
        ///      &quot;update&quot;: &quot;(height - blockSize*grid.height)/2&quot;
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;blockSize&quot;,
        ///      &quot;init&quot;: &quot;min(width/grid.width, height/grid.height)&quot;
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;pacManIsOpen&quot;, [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string pacman_vg {
            get {
                return ResourceManager.GetString("pacman_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 700,
        ///  &quot;height&quot;: 400,
        ///  &quot;padding&quot;: 5,
        ///
        ///  &quot;config&quot;: {
        ///    &quot;axisY&quot;: {
        ///      &quot;titleX&quot;: -2,
        ///      &quot;titleY&quot;: 410,
        ///      &quot;titleAngle&quot;: 0,
        ///      &quot;titleAlign&quot;: &quot;right&quot;,
        ///      &quot;titleBaseline&quot;: &quot;top&quot;
        ///    }
        ///  },
        ///
        ///  &quot;data&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;cars&quot;,
        ///      &quot;url&quot;: &quot;data/cars.json&quot;,
        ///      &quot;format&quot;: {
        ///        &quot;type&quot;: &quot;json&quot;,
        ///        &quot;parse&quot;: {&quot;Year&quot;: &quot;date:%Y-%m-%d&quot;}
        ///      },
        ///      &quot;transform&quot;: [
        ///        { &quot;type&quot;: &quot;filter&quot;, &quot;expr&quot;: &quot;datum.Horsepowe [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string parallel_coordinates_vg {
            get {
                return ResourceManager.GetString("parallel_coordinates_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;autosize&quot;: &quot;pad&quot;,
        ///  &quot;padding&quot;: 5,
        ///  &quot;height&quot;: 380,
        ///
        ///  &quot;data&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;random_data&quot;,
        ///      &quot;transform&quot;: [
        ///        { &quot;type&quot;: &quot;sequence&quot;, &quot;start&quot;: 1, &quot;stop&quot;: 5001 },
        ///        { &quot;type&quot;: &quot;formula&quot;, &quot;as&quot;: &quot;x&quot;, &quot;expr&quot;: &quot;random()&quot; },
        ///        { &quot;type&quot;: &quot;formula&quot;, &quot;as&quot;: &quot;y&quot;, &quot;expr&quot;: &quot;random()&quot; },
        ///        { &quot;type&quot;: &quot;filter&quot;, &quot;expr&quot;: &quot;datum.data &lt;= num_points&quot; }
        ///      ]
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;pi_estimates&quot;,
        ///      &quot;source&quot;: &quot;random_data&quot;, [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string pi_monte_carlo_vg {
            get {
                return ResourceManager.GetString("pi_monte_carlo_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 200,
        ///  &quot;height&quot;: 200,
        ///  &quot;autosize&quot;: &quot;none&quot;,
        ///
        ///  &quot;signals&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;startAngle&quot;, &quot;value&quot;: 0,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;range&quot;, &quot;min&quot;: 0, &quot;max&quot;: 6.29, &quot;step&quot;: 0.01}
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;endAngle&quot;, &quot;value&quot;: 6.29,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;range&quot;, &quot;min&quot;: 0, &quot;max&quot;: 6.29, &quot;step&quot;: 0.01}
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;padAngle&quot;, &quot;value&quot;: 0,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;range&quot;, &quot;min&quot;: 0, &quot;max&quot;: 0.1}
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;innerR [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string pie_chart_vg {
            get {
                return ResourceManager.GetString("pie_chart_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;height&quot;: 400,
        ///  &quot;padding&quot;: 5,
        ///
        ///  &quot;signals&quot;: [
        ///    { &quot;name&quot;: &quot;chartWidth&quot;, &quot;value&quot;: 300 },
        ///    { &quot;name&quot;: &quot;chartPad&quot;, &quot;value&quot;: 20 },
        ///    { &quot;name&quot;: &quot;width&quot;, &quot;update&quot;: &quot;2 * chartWidth + chartPad&quot; },
        ///    { &quot;name&quot;: &quot;year&quot;, &quot;value&quot;: 2000,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;range&quot;, &quot;min&quot;: 1850, &quot;max&quot;: 2000, &quot;step&quot;: 10} }
        ///  ],
        ///
        ///  &quot;data&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;population&quot;,
        ///      &quot;url&quot;: &quot;data/population.json&quot;
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;popYear&quot;,
        ///      &quot;source&quot;: &quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string population_pyramid_vg {
            get {
                return ResourceManager.GetString("population_pyramid_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 500,
        ///  &quot;height&quot;: 100,
        ///  &quot;padding&quot;: 5,
        ///
        ///  &quot;signals&quot;: [
        ///    { &quot;name&quot;: &quot;bandwidth&quot;, &quot;value&quot;: 0,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;range&quot;, &quot;min&quot;: 0, &quot;max&quot;: 0.1, &quot;step&quot;: 0.001} },
        ///    { &quot;name&quot;: &quot;method&quot;, &quot;value&quot;: &quot;pdf&quot;,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;radio&quot;, &quot;options&quot;: [&quot;pdf&quot;, &quot;cdf&quot;]} }
        ///  ],
        ///
        ///  &quot;data&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;points&quot;,
        ///      &quot;url&quot;: &quot;data/normal-2d.json&quot;
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;summary&quot;,
        ///      &quot;source&quot;: &quot;points&quot;,
        ///      &quot;transform&quot;: [
        ///     [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string probability_density_vg {
            get {
                return ResourceManager.GetString("probability_density_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;autosize&quot;: &quot;pad&quot;,
        ///
        ///  &quot;signals&quot;: [
        ///    { &quot;name&quot;: &quot;mapWidth&quot;, &quot;value&quot;: 300},
        ///    { &quot;name&quot;: &quot;mapHeight&quot;, &quot;value&quot;: 200},
        ///    { &quot;name&quot;: &quot;projScale&quot;, &quot;value&quot;: 45},
        ///    { &quot;name&quot;: &quot;projTranslate&quot;, &quot;update&quot;: &quot;[mapWidth / 2, mapHeight / 2]&quot; }
        ///  ],
        ///
        ///  &quot;data&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;projections&quot;,
        ///      &quot;values&quot;: [
        ///        &quot;azimuthalEquidistant&quot;,
        ///        &quot;conicConformal&quot;,
        ///        &quot;gnomonic&quot;,
        ///        &quot;mercator&quot;,
        ///        &quot;stereographic&quot;,
        ///        &quot;airy&quot;,
        ///      [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string projections_vg {
            get {
                return ResourceManager.GetString("projections_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 400,
        ///  &quot;height&quot;: 90,
        ///  &quot;padding&quot;: 5,
        ///
        ///  &quot;signals&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;quantiles&quot;, &quot;value&quot;: 20,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;range&quot;, &quot;min&quot;: 10, &quot;max&quot;: 200, &quot;step&quot;: 1}
        ///    },
        ///    {&quot;name&quot;: &quot;mean&quot;, &quot;update&quot;: &quot;log(11.4)&quot;},
        ///    {&quot;name&quot;: &quot;sd&quot;, &quot;value&quot;: 0.2},
        ///    {&quot;name&quot;: &quot;step&quot;, &quot;update&quot;: &quot;1.25 * sqrt(20 / quantiles)&quot;},
        ///    {&quot;name&quot;: &quot;size&quot;, &quot;update&quot;: &quot;scale(&apos;x&apos;, step) - scale(&apos;x&apos;, 0)&quot;},
        ///    {&quot;name&quot;: &quot;area&quot;, &quot;update&quot;: &quot;size * size&quot;},
        ///    {
        ///     [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string quantile_dot_plot_vg {
            get {
                return ResourceManager.GetString("quantile_dot_plot_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;padding&quot;: 5,
        ///
        ///  &quot;signals&quot;: [
        ///    { &quot;name&quot;: &quot;plotWidth&quot;, &quot;value&quot;: 250 },
        ///    { &quot;name&quot;: &quot;height&quot;, &quot;update&quot;: &quot;plotWidth&quot; },
        ///    {
        ///      &quot;name&quot;: &quot;numQuantiles&quot;, &quot;value&quot;: 100,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;range&quot;, &quot;min&quot;: 20, &quot;max&quot;: 200, &quot;step&quot;: 1}
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;url&quot;,
        ///      &quot;value&quot;: &quot;data/normal-2d.json&quot;,
        ///      &quot;bind&quot;: {
        ///        &quot;input&quot;: &quot;select&quot;,
        ///        &quot;options&quot;: [
        ///          &quot;data/normal-2d.json&quot;,
        ///          &quot;data/uniform-2d.json&quot;
        ///         [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string quantile_quantile_plot_vg {
            get {
                return ResourceManager.GetString("quantile_quantile_plot_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 400,
        ///  &quot;height&quot;: 400,
        ///  &quot;padding&quot;: 40,
        ///  &quot;autosize&quot;: {&quot;type&quot;: &quot;none&quot;, &quot;contains&quot;: &quot;padding&quot;},
        ///
        ///  &quot;signals&quot;: [
        ///    {&quot;name&quot;: &quot;radius&quot;, &quot;update&quot;: &quot;width / 2&quot;}
        ///  ],
        ///
        ///  &quot;data&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;table&quot;,
        ///      &quot;values&quot;: [
        ///        {&quot;key&quot;: &quot;key-0&quot;, &quot;value&quot;: 19, &quot;category&quot;: 0},
        ///        {&quot;key&quot;: &quot;key-1&quot;, &quot;value&quot;: 22, &quot;category&quot;: 0},
        ///        {&quot;key&quot;: &quot;key-2&quot;, &quot;value&quot;: 14, &quot;category&quot;: 0},
        ///        {&quot;key&quot;: &quot;key-3&quot;, &quot;value&quot;: 38, &quot;category&quot;: 0},
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string radar_chart_vg {
            get {
                return ResourceManager.GetString("radar_chart_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 200,
        ///  &quot;height&quot;: 200,
        ///
        ///  &quot;data&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;table&quot;,
        ///      &quot;values&quot;: [12, 23, 47, 6, 52, 19],
        ///      &quot;transform&quot;: [{&quot;type&quot;: &quot;pie&quot;, &quot;field&quot;: &quot;data&quot;}]
        ///    }
        ///  ],
        ///
        ///  &quot;scales&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;r&quot;,
        ///      &quot;type&quot;: &quot;sqrt&quot;,
        ///      &quot;domain&quot;: {&quot;data&quot;: &quot;table&quot;, &quot;field&quot;: &quot;data&quot;},
        ///      &quot;zero&quot;: true,
        ///      &quot;range&quot;: [20, 100]
        ///    }
        ///  ],
        ///
        ///  &quot;marks&quot;: [
        ///    {
        ///      &quot;type&quot;: &quot;arc&quot;,
        ///      &quot;from&quot;: {&quot;data&quot;: &quot;table&quot;},
        ///      &quot;encode&quot;: {
        ///         [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string radial_plot_vg {
            get {
                return ResourceManager.GetString("radial_plot_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 720,
        ///  &quot;height&quot;: 720,
        ///  &quot;padding&quot;: 5,
        ///  &quot;autosize&quot;: &quot;none&quot;,
        ///
        ///  &quot;signals&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;labels&quot;, &quot;value&quot;: true,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;checkbox&quot;}
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;radius&quot;, &quot;value&quot;: 280,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;range&quot;, &quot;min&quot;: 20, &quot;max&quot;: 600}
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;extent&quot;, &quot;value&quot;: 360,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;range&quot;, &quot;min&quot;: 0, &quot;max&quot;: 360, &quot;step&quot;: 1}
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;rotate&quot;, &quot;value&quot;: 0,
        ///      &quot;bin [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string radial_tree_layout_vg {
            get {
                return ResourceManager.GetString("radial_tree_layout_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;padding&quot;: 5,
        ///  &quot;width&quot;: 500,
        ///  &quot;height&quot;: 500,
        ///  &quot;autosize&quot;: &quot;pad&quot;,
        ///
        ///  &quot;signals&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;method&quot;, &quot;value&quot;: &quot;linear&quot;,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;select&quot;, &quot;options&quot;: [
        ///        &quot;linear&quot;, &quot;log&quot;, &quot;exp&quot;, &quot;pow&quot;, &quot;quad&quot;, &quot;poly&quot;
        ///      ]}
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;polyOrder&quot;, &quot;value&quot;: 3,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;range&quot;, &quot;min&quot;: 1, &quot;max&quot;: 10, &quot;step&quot;: 1}
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;groupby&quot;, &quot;value&quot;: &quot;none&quot;,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;select&quot;,  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string regression_vg {
            get {
                return ResourceManager.GetString("regression_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 770,
        ///  &quot;height&quot;: 770,
        ///  &quot;padding&quot;: 2,
        ///
        ///  &quot;signals&quot;: [
        ///    { &quot;name&quot;: &quot;cellSize&quot;, &quot;value&quot;: 10 },
        ///    { &quot;name&quot;: &quot;count&quot;, &quot;update&quot;: &quot;length(data(&apos;nodes&apos;))&quot; },
        ///    { &quot;name&quot;: &quot;width&quot;, &quot;update&quot;: &quot;span(range(&apos;position&apos;))&quot; },
        ///    { &quot;name&quot;: &quot;height&quot;, &quot;update&quot;: &quot;width&quot; },
        ///    {
        ///      &quot;name&quot;: &quot;src&quot;, &quot;value&quot;: {},
        ///      &quot;on&quot;: [
        ///        {&quot;events&quot;: &quot;text:mousedown&quot;, &quot;update&quot;: &quot;datum&quot;},
        ///        {&quot;events&quot;: &quot;window:mouseup&quot;, &quot;update&quot;: &quot;{}&quot;}
        ///      ]
        ///    }, [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string reorderable_matrix_vg {
            get {
                return ResourceManager.GetString("reorderable_matrix_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 450,
        ///  &quot;height&quot;: 450,
        ///  &quot;padding&quot;: 5,
        ///  &quot;autosize&quot;: {&quot;type&quot;: &quot;fit&quot;, &quot;resize&quot;: true},
        ///
        ///  &quot;signals&quot;: [
        ///    { &quot;name&quot;: &quot;yField&quot;, &quot;value&quot;: &quot;IMDB_Rating&quot;,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;select&quot;, &quot;options&quot;: [&quot;IMDB_Rating&quot;, &quot;Rotten_Tomatoes_Rating&quot;, &quot;US_Gross&quot;, &quot;Worldwide_Gross&quot;]} },
        ///    { &quot;name&quot;: &quot;xField&quot;, &quot;value&quot;: &quot;Rotten_Tomatoes_Rating&quot;,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;select&quot;, &quot;options&quot;: [&quot;IMDB_Rating&quot;, &quot;Rotten_Tomatoes_Rating&quot;, &quot;US_Gross&quot;, &quot;Worldwide_ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string scatter_plot_null_values_vg {
            get {
                return ResourceManager.GetString("scatter_plot_null_values_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 200,
        ///  &quot;height&quot;: 200,
        ///  &quot;padding&quot;: 5,
        ///
        ///  &quot;data&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;source&quot;,
        ///      &quot;url&quot;: &quot;data/cars.json&quot;,
        ///      &quot;transform&quot;: [
        ///        {
        ///          &quot;type&quot;: &quot;filter&quot;,
        ///          &quot;expr&quot;: &quot;datum[&apos;Horsepower&apos;] != null &amp;&amp; datum[&apos;Miles_per_Gallon&apos;] != null &amp;&amp; datum[&apos;Acceleration&apos;] != null&quot;
        ///        }
        ///      ]
        ///    }
        ///  ],
        ///
        ///  &quot;scales&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;x&quot;,
        ///      &quot;type&quot;: &quot;linear&quot;,
        ///      &quot;round&quot;: true,
        ///      &quot;nice&quot;: true,
        ///      &quot;zero&quot;: tru [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string scatter_plot_vg {
            get {
                return ResourceManager.GetString("scatter_plot_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 500,
        ///  &quot;height&quot;: 200,
        ///  &quot;padding&quot;: 5,
        ///
        ///  &quot;data&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;table&quot;,
        ///      &quot;values&quot;: [
        ///        {&quot;x&quot;: 0, &quot;y&quot;: 28, &quot;c&quot;:0}, {&quot;x&quot;: 0, &quot;y&quot;: 55, &quot;c&quot;:1},
        ///        {&quot;x&quot;: 1, &quot;y&quot;: 43, &quot;c&quot;:0}, {&quot;x&quot;: 1, &quot;y&quot;: 91, &quot;c&quot;:1},
        ///        {&quot;x&quot;: 2, &quot;y&quot;: 81, &quot;c&quot;:0}, {&quot;x&quot;: 2, &quot;y&quot;: 53, &quot;c&quot;:1},
        ///        {&quot;x&quot;: 3, &quot;y&quot;: 19, &quot;c&quot;:0}, {&quot;x&quot;: 3, &quot;y&quot;: 87, &quot;c&quot;:1},
        ///        {&quot;x&quot;: 4, &quot;y&quot;: 52, &quot;c&quot;:0}, {&quot;x&quot;: 4, &quot;y&quot;: 48, &quot;c&quot;:1},
        ///        {&quot;x&quot;: 5, &quot;y&quot;: 24, &quot;c&quot;:0}, {&quot;x&quot;: 5, [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string stacked_area_chart_vg {
            get {
                return ResourceManager.GetString("stacked_area_chart_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 500,
        ///  &quot;height&quot;: 200,
        ///  &quot;padding&quot;: 5,
        ///
        ///  &quot;data&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;table&quot;,
        ///      &quot;values&quot;: [
        ///        {&quot;x&quot;: 0, &quot;y&quot;: 28, &quot;c&quot;: 0}, {&quot;x&quot;: 0, &quot;y&quot;: 55, &quot;c&quot;: 1},
        ///        {&quot;x&quot;: 1, &quot;y&quot;: 43, &quot;c&quot;: 0}, {&quot;x&quot;: 1, &quot;y&quot;: 91, &quot;c&quot;: 1},
        ///        {&quot;x&quot;: 2, &quot;y&quot;: 81, &quot;c&quot;: 0}, {&quot;x&quot;: 2, &quot;y&quot;: 53, &quot;c&quot;: 1},
        ///        {&quot;x&quot;: 3, &quot;y&quot;: 19, &quot;c&quot;: 0}, {&quot;x&quot;: 3, &quot;y&quot;: 87, &quot;c&quot;: 1},
        ///        {&quot;x&quot;: 4, &quot;y&quot;: 52, &quot;c&quot;: 0}, {&quot;x&quot;: 4, &quot;y&quot;: 48, &quot;c&quot;: 1},
        ///        {&quot;x&quot;: 5, &quot;y&quot;: 24, &quot;c&quot;: 0 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string stacked_bar_chart_vg {
            get {
                return ResourceManager.GetString("stacked_bar_chart_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 650,
        ///  &quot;height&quot;: 300,
        ///  &quot;padding&quot;: 5,
        ///  &quot;autosize&quot;: {&quot;type&quot;: &quot;fit&quot;, &quot;contains&quot;: &quot;padding&quot;},
        ///
        ///  &quot;signals&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;indexDate&quot;,
        ///      &quot;update&quot;: &quot;time(&apos;Jan 1 2005&apos;)&quot;,
        ///      &quot;on&quot;: [
        ///        {
        ///          &quot;events&quot;: &quot;mousemove&quot;,
        ///          &quot;update&quot;: &quot;invert(&apos;x&apos;, clamp(x(), 0, width))&quot;
        ///        }
        ///      ]
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;maxDate&quot;,
        ///      &quot;update&quot;: &quot;time(&apos;Mar 1 2010&apos;)&quot;
        ///    }
        ///  ],
        ///
        ///  &quot;data&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;stocks&quot;,
        ///  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string stock_index_chart_vg {
            get {
                return ResourceManager.GetString("stock_index_chart_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 600,
        ///  &quot;height&quot;: 600,
        ///  &quot;padding&quot;: 5,
        ///  &quot;autosize&quot;: &quot;none&quot;,
        ///
        ///  &quot;data&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;tree&quot;,
        ///      &quot;url&quot;: &quot;data/flare.json&quot;,
        ///      &quot;transform&quot;: [
        ///        {
        ///          &quot;type&quot;: &quot;stratify&quot;,
        ///          &quot;key&quot;: &quot;id&quot;,
        ///          &quot;parentKey&quot;: &quot;parent&quot;
        ///        },
        ///        {
        ///          &quot;type&quot;: &quot;partition&quot;,
        ///          &quot;field&quot;: &quot;size&quot;,
        ///          &quot;sort&quot;: {&quot;field&quot;: &quot;value&quot;},
        ///          &quot;size&quot;: [{&quot;signal&quot;: &quot;2 * PI&quot;}, {&quot;signal&quot;: &quot;width / 2&quot;}],
        ///        [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string sunburst_vg {
            get {
                return ResourceManager.GetString("sunburst_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 600,
        ///  &quot;height&quot;: 300,
        ///  &quot;padding&quot;: 5,
        ///  &quot;autosize&quot;: {&quot;type&quot;: &quot;fit&quot;, &quot;resize&quot;: true, &quot;contains&quot;: &quot;padding&quot;},
        ///
        ///  &quot;title&quot;: {
        ///    &quot;text&quot;: &quot;U.S. Flight Statistics&quot;,
        ///    &quot;subtitle&quot;: &quot;20k Sample, January - March 2001&quot;,
        ///    &quot;subtitleFontStyle&quot;: &quot;italic&quot;,
        ///    &quot;frame&quot;: &quot;group&quot;,
        ///    &quot;anchor&quot;: &quot;start&quot;,
        ///    &quot;offset&quot;: 10
        ///  },
        ///
        ///  &quot;signals&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;timeunit&quot;, &quot;value&quot;: [&quot;day&quot;],
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;select&quot;, &quot;options&quot;: [
        ///        [&quot;yea [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string time_units_vg {
            get {
                return ResourceManager.GetString("time_units_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 500,
        ///  &quot;height&quot;: 80,
        ///  &quot;padding&quot;: 5,
        ///
        ///  &quot;data&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;people&quot;,
        ///      &quot;values&quot;: [
        ///        {
        ///          &quot;label&quot;: &quot;Washington&quot;,
        ///          &quot;born&quot;: -7506057600000,
        ///          &quot;died&quot;: -5366196000000,
        ///          &quot;enter&quot;: -5701424400000,
        ///          &quot;leave&quot;: -5453884800000
        ///        },
        ///        {
        ///          &quot;label&quot;: &quot;Adams&quot;,
        ///          &quot;born&quot;: -7389766800000,
        ///          &quot;died&quot;: -4528285200000,
        ///          &quot;enter&quot;: -5453884800000,
        ///           [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string timelines_vg {
            get {
                return ResourceManager.GetString("timelines_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 500,
        ///  &quot;height&quot;: 410,
        ///  &quot;padding&quot;: 5,
        ///  &quot;autosize&quot;: &quot;fit&quot;,
        ///
        ///  &quot;signals&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;k&quot;, &quot;value&quot;: 20,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;range&quot;, &quot;min&quot;: 10, &quot;max&quot;: 30, &quot;step&quot;: 1}
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;op&quot;, &quot;value&quot;: &quot;average&quot;,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;select&quot;, &quot;options&quot;: [&quot;average&quot;, &quot;median&quot;, &quot;sum&quot;]}
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;label&quot;,
        ///      &quot;value&quot;: {&quot;average&quot;: &quot;Average&quot;, &quot;median&quot;: &quot;Median&quot;, &quot;sum&quot;: &quot;Total&quot;}
        ///    }
        ///  ],
        ///
        ///  &quot;title&quot;:  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string top_k_plot_vg {
            get {
                return ResourceManager.GetString("top_k_plot_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 500,
        ///  &quot;height&quot;: 410,
        ///  &quot;padding&quot;: 5,
        ///  &quot;autosize&quot;: &quot;fit&quot;,
        ///
        ///  &quot;signals&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;k&quot;, &quot;value&quot;: 20,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;range&quot;, &quot;min&quot;: 10, &quot;max&quot;: 30, &quot;step&quot;: 1}
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;op&quot;, &quot;value&quot;: &quot;average&quot;,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;select&quot;, &quot;options&quot;: [&quot;average&quot;, &quot;median&quot;, &quot;sum&quot;]}
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;label&quot;,
        ///      &quot;value&quot;: {&quot;average&quot;: &quot;Average&quot;, &quot;median&quot;: &quot;Median&quot;, &quot;sum&quot;: &quot;Total&quot;}
        ///    }
        ///  ],
        ///
        ///  &quot;title&quot;:  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string top_k_plot_with_others_vg {
            get {
                return ResourceManager.GetString("top_k_plot_with_others_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 600,
        ///  &quot;height&quot;: 1600,
        ///  &quot;padding&quot;: 5,
        ///
        ///  &quot;signals&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;labels&quot;, &quot;value&quot;: true,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;checkbox&quot;}
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;layout&quot;, &quot;value&quot;: &quot;tidy&quot;,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;radio&quot;, &quot;options&quot;: [&quot;tidy&quot;, &quot;cluster&quot;]}
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;links&quot;, &quot;value&quot;: &quot;diagonal&quot;,
        ///      &quot;bind&quot;: {
        ///        &quot;input&quot;: &quot;select&quot;,
        ///        &quot;options&quot;: [&quot;line&quot;, &quot;curve&quot;, &quot;diagonal&quot;, &quot;orthogonal&quot;]
        ///      }
        ///    },
        ///    {
        ///  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tree_layout_vg {
            get {
                return ResourceManager.GetString("tree_layout_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 960,
        ///  &quot;height&quot;: 500,
        ///  &quot;padding&quot;: 2.5,
        ///  &quot;autosize&quot;: &quot;none&quot;,
        ///
        ///  &quot;signals&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;layout&quot;, &quot;value&quot;: &quot;squarify&quot;,
        ///      &quot;bind&quot;: {
        ///        &quot;input&quot;: &quot;select&quot;,
        ///        &quot;options&quot;: [
        ///          &quot;squarify&quot;,
        ///          &quot;binary&quot;,
        ///          &quot;slicedice&quot;
        ///        ]
        ///      }
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;aspectRatio&quot;, &quot;value&quot;: 1.6,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;range&quot;, &quot;min&quot;: 1, &quot;max&quot;: 5, &quot;step&quot;: 0.1}
        ///    }
        ///  ],
        ///
        ///  &quot;data&quot;: [
        ///    {
        ///      &quot;name&quot;: [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string treemap_vg {
            get {
                return ResourceManager.GetString("treemap_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 500,
        ///  &quot;height&quot;: 380,
        ///  &quot;padding&quot;: 5,
        ///  &quot;autosize&quot;: &quot;pad&quot;,
        ///
        ///  &quot;config&quot;: {
        ///    &quot;text&quot;: {
        ///      &quot;font&quot;: &quot;Ideal Sans, Avenir Next, Helvetica&quot;
        ///    },
        ///    &quot;title&quot;: {
        ///      &quot;font&quot;: &quot;Ideal Sans, Avenir Next, Helvetica&quot;,
        ///      &quot;fontWeight&quot;: 500,
        ///      &quot;fontSize&quot;: 17,
        ///      &quot;limit&quot;: -1
        ///    },
        ///    &quot;axis&quot;: {
        ///      &quot;labelFont&quot;: &quot;Ideal Sans, Avenir Next, Helvetica&quot;,
        ///      &quot;labelFontSize&quot;: 12
        ///    }
        ///  },
        ///
        ///  &quot;signals&quot;: [
        ///    { &quot;name&quot;: &quot;size&quot;, &quot;value&quot;:  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string u_district_cuisine_vg {
            get {
                return ResourceManager.GetString("u_district_cuisine_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 500,
        ///  &quot;padding&quot;: 5,
        ///
        ///  &quot;config&quot;: {
        ///    &quot;axisBand&quot;: {
        ///      &quot;bandPosition&quot;: 1,
        ///      &quot;tickExtra&quot;: true,
        ///      &quot;tickOffset&quot;: 0
        ///    }
        ///  },
        ///
        ///  &quot;signals&quot;: [
        ///    { &quot;name&quot;: &quot;fields&quot;,
        ///      &quot;value&quot;: [&quot;petalWidth&quot;, &quot;petalLength&quot;, &quot;sepalWidth&quot;, &quot;sepalLength&quot;] },
        ///    { &quot;name&quot;: &quot;plotWidth&quot;, &quot;value&quot;: 60 },
        ///    { &quot;name&quot;: &quot;height&quot;, &quot;update&quot;: &quot;(plotWidth + 10) * length(fields)&quot;},
        ///    { &quot;name&quot;: &quot;trim&quot;, &quot;value&quot;: true,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;checkbox&quot;} [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string violin_plot_vg {
            get {
                return ResourceManager.GetString("violin_plot_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 960,
        ///  &quot;autosize&quot;: &quot;none&quot;,
        ///
        ///  &quot;signals&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;grid&quot;,
        ///      &quot;init&quot;: &quot;data(&apos;volcano&apos;)[0]&quot;
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;height&quot;,
        ///      &quot;update&quot;: &quot;round(grid.height * width / grid.width)&quot;
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;smooth&quot;, &quot;value&quot;: true,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;radio&quot;, &quot;options&quot;: [true, false]}
        ///    }
        ///  ],
        ///
        ///  &quot;data&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;volcano&quot;,
        ///      &quot;url&quot;: &quot;data/volcano.json&quot;
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;contours&quot;,
        ///  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string volcano_contours_vg {
            get {
                return ResourceManager.GetString("volcano_contours_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 400,
        ///  &quot;height&quot;: 400,
        ///  &quot;signals&quot;: [
        ///    {&quot;name&quot;: &quot;centerX&quot;, &quot;init&quot;: &quot;width/2&quot;},
        ///    {&quot;name&quot;: &quot;centerY&quot;, &quot;init&quot;: &quot;height/2&quot;},
        ///    {&quot;name&quot;: &quot;radiusRef&quot;, &quot;init&quot;: &quot;min(width,height)*0.95&quot;},
        ///    {&quot;name&quot;: &quot;sizeFactor&quot;, &quot;init&quot;: &quot;radiusRef/400&quot;},
        ///    {&quot;name&quot;: &quot;outerRadius&quot;, &quot;init&quot;: &quot;radiusRef/2&quot;},
        ///    {&quot;name&quot;: &quot;innerRadiusMinutes&quot;, &quot;init&quot;: &quot;radiusRef/2 - (18 * sizeFactor)&quot;},
        ///    {&quot;name&quot;: &quot;innerRadiusHours&quot;, &quot;init&quot;: &quot;radiusRef/2 - (36 * sizeFac [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string watch_vg {
            get {
                return ResourceManager.GetString("watch_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 250,
        ///  &quot;height&quot;: 200,
        ///
        ///  &quot;data&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;weather&quot;,
        ///      &quot;url&quot;: &quot;data/weather.json&quot;
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;actual&quot;,
        ///      &quot;source&quot;: &quot;weather&quot;,
        ///      &quot;transform&quot;: [{&quot;type&quot;:&quot;filter&quot;, &quot;expr&quot;:&quot;datum.actual&quot;}]
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;forecast&quot;,
        ///      &quot;source&quot;: &quot;weather&quot;,
        ///      &quot;transform&quot;: [{&quot;type&quot;:&quot;filter&quot;, &quot;expr&quot;:&quot;datum.forecast&quot;}]
        ///    }
        ///  ],
        ///
        ///  &quot;scales&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;x&quot;,
        ///      &quot;type&quot;: &quot;band&quot;,
        ///      &quot;range [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string weekly_temperature_vg {
            get {
                return ResourceManager.GetString("weekly_temperature_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 900,
        ///  &quot;height&quot;: 465,
        ///  &quot;padding&quot;: 5,
        ///
        ///  &quot;data&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;wheat&quot;,
        ///      &quot;url&quot;: &quot;data/wheat.json&quot;
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;wheat-filtered&quot;,
        ///      &quot;source&quot;: &quot;wheat&quot;,
        ///      &quot;transform&quot;: [
        ///        { &quot;type&quot;: &quot;filter&quot;, &quot;expr&quot;: &quot;!!datum.wages&quot; }
        ///      ]
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;monarchs&quot;,
        ///      &quot;url&quot;: &quot;data/monarchs.json&quot;,
        ///      &quot;transform&quot;: [
        ///        {
        ///          &quot;type&quot;: &quot;formula&quot;,
        ///          &quot;expr&quot;: &quot;((!datum.commonwealth &amp; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string wheat_and_wages_vg {
            get {
                return ResourceManager.GetString("wheat_and_wages_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 500,
        ///  &quot;padding&quot;: 5,
        ///
        ///  &quot;signals&quot;: [
        ///    { &quot;name&quot;: &quot;symbolDiameter&quot;, &quot;value&quot;: 4,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;range&quot;, &quot;min&quot;: 1, &quot;max&quot;: 8, &quot;step&quot;: 0.25} },
        ///    { &quot;name&quot;: &quot;binOffset&quot;, &quot;value&quot;: 0,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;range&quot;, &quot;min&quot;: -0.1, &quot;max&quot;: 0.1} },
        ///    { &quot;name&quot;: &quot;binStep&quot;, &quot;value&quot;: 0.075,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;range&quot;, &quot;min&quot;: 0.001, &quot;max&quot;: 0.2, &quot;step&quot;: 0.001} },
        ///    { &quot;name&quot;: &quot;height&quot;, &quot;update&quot;: &quot;extent[1] * (1 + symbolDiameter)&quot; }
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string wheat_plot_vg {
            get {
                return ResourceManager.GetString("wheat_plot_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 800,
        ///  &quot;height&quot;: 600,
        ///  &quot;padding&quot;: 5,
        ///  &quot;autosize&quot;: {&quot;type&quot;: &quot;none&quot;, &quot;contains&quot;: &quot;padding&quot;},
        ///  &quot;background&quot;: &quot;#111&quot;,
        ///
        ///  &quot;signals&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;shape&quot;, &quot;value&quot;: &quot;wedge&quot;,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;select&quot;, &quot;options&quot;: [&quot;wedge&quot;, &quot;arrow&quot;]}
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;maxSize&quot;, &quot;value&quot;: 250,
        ///      &quot;bind&quot;: {&quot;input&quot;: &quot;range&quot;, &quot;min&quot;: 50, &quot;max&quot;: 700, &quot;step&quot;: 10}
        ///    }
        ///  ],
        ///
        ///  &quot;data&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;vectors&quot;,
        ///      &quot;url&quot;: &quot;data/w [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string wind_vectors_vg {
            get {
                return ResourceManager.GetString("wind_vectors_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 800,
        ///  &quot;height&quot;: 400,
        ///  &quot;padding&quot;: 0,
        ///
        ///  &quot;data&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;table&quot;,
        ///      &quot;values&quot;: [
        ///        &quot;Declarative visualization grammars can accelerate development, facilitate retargeting across platforms, and allow language-level optimizations. However, existing declarative visualization languages are primarily concerned with visual encoding, and rely on imperative event handlers for interactive behaviors. In response, we introduc [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string word_cloud_vg {
            get {
                return ResourceManager.GetString("word_cloud_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 900,
        ///  &quot;height&quot;: 500,
        ///  &quot;autosize&quot;: &quot;none&quot;,
        ///
        ///  &quot;encode&quot;: {
        ///    &quot;update&quot;: {
        ///      &quot;fill&quot;: {&quot;signal&quot;: &quot;background&quot;}
        ///    }
        ///  },
        ///
        ///  &quot;signals&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;type&quot;,
        ///      &quot;value&quot;: &quot;mercator&quot;,
        ///      &quot;bind&quot;: {
        ///        &quot;input&quot;: &quot;select&quot;,
        ///        &quot;options&quot;: [
        ///          &quot;albers&quot;,
        ///          &quot;albersUsa&quot;,
        ///          &quot;azimuthalEqualArea&quot;,
        ///          &quot;azimuthalEquidistant&quot;,
        ///          &quot;conicConformal&quot;,
        ///          &quot;conicEqualArea&quot;,
        ///          &quot;coni [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string world_map_vg {
            get {
                return ResourceManager.GetString("world_map_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 500,
        ///  &quot;height&quot;: 300,
        ///  &quot;padding&quot;: {
        ///    &quot;top&quot;:    10,
        ///    &quot;left&quot;:   40,
        ///    &quot;bottom&quot;: 20,
        ///    &quot;right&quot;:  10
        ///  },
        ///  &quot;autosize&quot;: &quot;none&quot;,
        ///
        ///  &quot;config&quot;: {
        ///    &quot;axis&quot;: {
        ///      &quot;domain&quot;: false,
        ///      &quot;tickSize&quot;: 3,
        ///      &quot;tickColor&quot;: &quot;#888&quot;,
        ///      &quot;labelFont&quot;: &quot;Monaco, Courier New&quot;
        ///    }
        ///  },
        ///
        ///  &quot;signals&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;margin&quot;,
        ///      &quot;value&quot;: 20
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;hover&quot;,
        ///      &quot;on&quot;: [
        ///        {&quot;events&quot;: &quot;*:mouseover&quot;, &quot;enco [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string zoomable_scatter_plot_vg {
            get {
                return ResourceManager.GetString("zoomable_scatter_plot_vg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega/v5.json&quot;,
        ///  &quot;width&quot;: 900,
        ///  &quot;height&quot;: 500,
        ///  &quot;autosize&quot;: &quot;none&quot;,
        ///
        ///  &quot;signals&quot;: [
        ///    { &quot;name&quot;: &quot;tx&quot;, &quot;update&quot;: &quot;width / 2&quot; },
        ///    { &quot;name&quot;: &quot;ty&quot;, &quot;update&quot;: &quot;height / 2&quot; },
        ///    {
        ///      &quot;name&quot;: &quot;scale&quot;,
        ///      &quot;value&quot;: 150,
        ///      &quot;on&quot;: [{
        ///        &quot;events&quot;: {&quot;type&quot;: &quot;wheel&quot;, &quot;consume&quot;: true},
        ///        &quot;update&quot;: &quot;clamp(scale * pow(1.0005, -event.deltaY * pow(16, event.deltaMode)), 150, 3000)&quot;
        ///      }]
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;angles&quot;,
        ///      &quot;value&quot;: [0, 0],
        ///   [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string zoomable_world_map_vg {
            get {
                return ResourceManager.GetString("zoomable_world_map_vg", resourceCulture);
            }
        }
    }
}
